#!/usr/bin/env python

zmq_version = [ '3', '2', '2' ]

config_win = '''
#define ZMQ_HAVE_WINDOWS
'''

config_linux = '''
#define ZMQ_HAVE_EVENTFD 1
#define ZMQ_HAVE_IFADDRS 1
#define ZMQ_HAVE_LINUX 1
#define ZMQ_HAVE_SOCK_CLOEXEC 1
#define ZMQ_HAVE_SO_KEEPALIVE 1
#define ZMQ_HAVE_TCP_KEEPCNT 1
#define ZMQ_HAVE_TCP_KEEPIDLE 1
#define ZMQ_HAVE_TCP_KEEPINTVL 1
#define ZMQ_HAVE_UIO 1
'''

config_osx = '''
#define ZMQ_HAVE_IFADDRS 1
#define ZMQ_HAVE_OSX 1
#define ZMQ_HAVE_SO_KEEPALIVE 1
#define ZMQ_HAVE_TCP_KEEPALIVE 1
#define ZMQ_HAVE_UIO 1

'''

template = '''
#ifndef __ZMQ_PLATFORM_HPP_INCLUDED__
#define __ZMQ_PLATFORM_HPP_INCLUDED__

%s

#endif
'''

cfg = {
	'win' : {
		'target'   : 'libzmq',
		'vnum'     : None,
		'defines'  : [ 'DLL_EXPORT', 'FD_SETSIZE=1024' ],
		'config'   : template % config_win,
		'stlib'    : [ 'ws2_32', 'advapi32' ],
		'cflags'   : [ '/wd4512', '/wd4244', '/wd4127', '/wd4099', '/wd4267', '/wd4800', '/wd4245', '/wd4100', '/wd4121' ],
		'src'      : [ 'src/version.rc' ],
	},
	'linux' : {
		'target'   : 'zmq',
		'vnum' : '.'.join(zmq_version),
		'defines'  : [ '_GNU_SOURCE', '_REENTRANT', '_THREAD_SAFE', 'ZMQ_FORCE_EPOLL' ],
		'config'   : template % config_linux,
		'stlib'    : [],
		'cflags'   : [],
		'src'      : [],
	},
	'osx' : {
		'target'   : 'zmq',
		'vnum' : '.'.join(zmq_version),
		'defines'  : [ '_DARWIN_C_SOURCE', '_REENTRANT', '_THREAD_SAFE', 'ZMQ_FORCE_KQUEUE' ],
		'config'   : template % config_osx,
		'stlib'    : [],
		'cflags'   : [],
		'src'      : [],
	},
}

cfg['win_x86']      = cfg['win']
cfg['win_x64']      = cfg['win']
cfg['linux_x86']    = cfg['linux']
cfg['linux_x86_64'] = cfg['linux']

var = bld.env['BASENAME']

bld(
	name     = 'zmq',
	features = 'emit',
	source   = cfg[var]['config'],
	target   = 'platform.hpp',
)

bld(
	name              = 'zmq',
	features          = 'subst win',
	source            = 'src/version.rc.in',
	target            = 'src/version.rc',
	ZMQ_VERSION_MAJOR = zmq_version[0],
	ZMQ_VERSION_MINOR = zmq_version[1],
	ZMQ_VERSION_PATCH = zmq_version[2],
)

bld(
	name            = 'zmq',
	features        = 'cxx cxxshlib vnum',
	vnum            = cfg[var]['vnum'],
	includes        = [ '.', 'include' ],
	export_includes = [ 'include' ],
	source          = bld.path.ant_glob('src/*.cpp') + cfg[var]['src'],
	defines         = cfg[var]['defines'],
	stlib           = cfg[var]['stlib'],
	cxxflags        = cfg[var]['cflags'],
	target          = cfg[var]['target'],
	version         = False,
)
